/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var v=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var L=Object.prototype.hasOwnProperty;var M=(a,s)=>{for(var t in s)v(a,t,{get:s[t],enumerable:!0})},I=(a,s,t,e)=>{if(s&&typeof s=="object"||typeof s=="function")for(let i of C(s))!L.call(a,i)&&i!==t&&v(a,i,{get:()=>s[i],enumerable:!(e=E(s,i))||e.enumerable});return a};var N=a=>I(v({},"__esModule",{value:!0}),a);var k={};M(k,{default:()=>O});module.exports=N(k);var S=require("obsidian");var u=require("obsidian");var x="cursor-position-history",b={databaseFilePath:`plugins/${x}/cursor-position-history.json`,delayAfterFileOpeningMs:200,saveTimoutMs:5e3,maxHistoryLength:500};var d=class extends u.PluginSettingTab{constructor(t,e,i){super(t,e);this.minSaveTimeoutMs=i;this.settingsProvider=e}display(){var n;let{containerEl:t}=this,e=this.settingsProvider.settings;t.empty(),t.createEl("h3",{text:"Plugin Description"}),t.createEl("p",{text:"This plugin has two functionalities - both related to the position of the cursor within the editor."});let i=t.createEl("ol");i.createEl("li",{text:"It remembers the previous cursor position whenever you switch between documents. When you return to a previously opened document, it automatically scrolls to the position where you left it."}),i.createEl("li",{text:"It keeps a history of the last few hundred cursor positions (across files), allowing you to move backward and forward using shortcuts."});let r=(n=i.lastChild)==null?void 0:n.createEl("ul");r==null||r.createEl("li",{text:'Shortcut 1: "Return to previous cursor position" goes backward in the history.'}),r==null||r.createEl("li",{text:'Shortcut 2: "Re-return to next cursor position" goes forward in the history.'}),new u.Setting(t).setName("Database file path").setDesc("The plugin will use this file to store its data which needs to survive a restart of Obsidian.").addText(c=>c.setPlaceholder("Example: cursor-position-history.json").setValue(e.databaseFilePath).onChange(async l=>{e.databaseFilePath=l,await this.settingsProvider.saveSettings(e)})),new u.Setting(t).setName("Delay after opening a new note in milliseconds").setDesc("A time-delay to avoid scrolling when opening a file through a link which already scrolls to a specific position. If you are not using links to page sections, set the delay to zero (slider to the left). Slider values: 0-300 ms (default value: 200 ms).").addSlider(c=>c.setLimits(0,300,10).setValue(e.delayAfterFileOpeningMs).setDynamicTooltip().onChange(async l=>{e.delayAfterFileOpeningMs=l,await this.settingsProvider.saveSettings(e)}));let o=this.minSaveTimeoutMs*10;new u.Setting(t).setName("Delay between saving the current cursor position").setDesc(`The current data is stored to the database file periodically (as well as when Obsidian is closed). Slider values: ${this.minSaveTimeoutMs/1e3}-${o/1e3}s (default value: ${this.minSaveTimeoutMs/1e3}s).`).addSlider(c=>c.setLimits(this.minSaveTimeoutMs,o,10).setValue(e.saveTimoutMs).setDynamicTooltip().onChange(async l=>{e.saveTimoutMs=l,await this.settingsProvider.saveSettings(e)})),new u.Setting(t).setName("Maximum history length").setDesc(`The history of the last N cursor positions is saved (until restarting Obsidian) to allow the user to go back and forth with short-cuts. Slider values: 100-2000 (default value: ${500}).`).addSlider(c=>c.setLimits(100,2e3,100).setValue(e.maxHistoryLength).setDynamicTooltip().onChange(async l=>{e.maxHistoryLength=l,await this.settingsProvider.saveSettings(e)}))}};function h(a,s=!1){if(a){if(typeof a=="string")return a;if(a instanceof Error)return T(a,s);{let t=JSON.stringify(a);return t==="{}"?T(a,s):t}}else return"[empty-error]"}function T(a,s){var e,i;let t={};if("message"in a&&(t.message=(e=a.message)!=null?e:"[no message]"),"stack"in a){let r=(i=a.stack)!=null?i:"[no stack]";t.stack=s?r:"[removed]"}return"cause"in a&&(t.cause=h(a.cause,s)),JSON.stringify(t)}function p(a){return JSON.parse(JSON.stringify(a))}var g="[INVALID_FILE_IDENTIFIER]";function D(a){let s=a.id;return!s||typeof s!="string"?"[NO_LEAF_ID]":s}function P(a){var t;let s=(t=a==null?void 0:a.getViewState().state)==null?void 0:t.file;return s?D(a)+":"+s:null}var w="CursorPositionHistoryPlugin";var _=20,A=60,f=class{constructor(s){this.settingsProvider=s;this.previousPositions=[];this.nextPositions=[]}updateCurrentPosition(s){this.hasEnoughSpatialDifference(this.currentPosition,s)?(this.currentPosition&&(this.previousPositions.push(this.currentPosition),this.previousPositions=this.enforceMaxHistoryLength(this.previousPositions)),this.shouldClearNextPositions(s)&&(this.nextPositions=[]),this.currentPosition=s):this.currentPosition&&this.currentPosition.epochTimestampMs<s.epochTimestampMs&&(this.currentPosition.epochTimestampMs=s.epochTimestampMs)}async returnToPreviousPosition(s,t){let e=this.previousPositions.pop();if(!e)return;let i=this.currentPosition;this.currentPosition=e,i&&(this.nextPositions.push(i),this.nextPositions=this.enforceMaxHistoryLength(this.nextPositions)),await this.navigateToPosition(s,t,i,e)}async proceedToNextPosition(s,t){let e=this.nextPositions.pop();if(!e)return;let i=this.currentPosition;this.currentPosition=e,i&&(this.previousPositions.push(i),this.previousPositions=this.enforceMaxHistoryLength(this.previousPositions)),await this.navigateToPosition(s,t,i,e)}async navigateToPosition(s,t,e,i){(e==null?void 0:e.file)!==i.file&&await(t==null?void 0:t.openFile(i.file));let r={line:i.line,ch:i.positionInLine},o=await this.shouldScrollToCenter(s,e,i);s==null||s.setSelection(r),s==null||s.scrollIntoView({from:r,to:r},o)}async shouldScrollToCenter(s,t,e){var i,r;if(!s)return!1;if(!t||(t==null?void 0:t.file)!==e.file)return!0;try{let o=s.cm;if(o&&o.visibleRanges&&((i=o.visibleRanges.length)!=null?i:0)>0){let n=o.visibleRanges[0],l=o.state.doc.line(e.line).from+e.positionInLine;return!(l>=n.from&&l<=n.to)}else{let n=(r=t==null?void 0:t.line)!=null?r:0;return Math.abs(n-e.line)>_}}catch(o){return console.warn(`Failed to determine whether to scroll to center: ${h(o)}`),!1}}hasEnoughSpatialDifference(s,t){return s?t?s===t?!1:s.file.path!==t.file.path?!0:s.line!==t.line:!!s:!!t}shouldClearNextPositions(s){var r,o;if(this.nextPositions.length<=0)return!1;let t=(o=(r=this.nextPositions[this.nextPositions.length-1])==null?void 0:r.epochTimestampMs)!=null?o:0;return s.epochTimestampMs-t>1e3*A}enforceMaxHistoryLength(s){let t=this.settingsProvider.settings.maxHistoryLength;return s.slice(-t)}};var m=class extends S.Plugin{constructor(){super(...arguments);this.loadedLeafIdList=[];this.loadingFile=!1}async onload(){this.historyService=new f(this),await this.loadSettings(),await this.initializeDatabase(),this.addSettingTab(new d(this.app,this,5e3)),await this.registerEvents(),await this.registerTimeIntervals(),await this.registerShortcutCommands(),await this.restoreCursorState()}async initializeDatabase(){try{this.database=await this.readDatabase()}catch(t){console.error(`${w} can't read database: `+h(t)),this.database={},this.lastSavedDatabase={}}this.lastSavedDatabase=p(this.database)}async registerEvents(){this.registerEvent(this.app.workspace.on("file-open",t=>this.restoreCursorState())),this.registerEvent(this.app.workspace.on("quit",()=>{this.writeDatabase(this.database)})),this.registerEvent(this.app.vault.on("rename",(t,e)=>this.renameFile(t,e))),this.registerEvent(this.app.vault.on("delete",t=>this.deleteFile(t)))}async registerTimeIntervals(){this.registerInterval(window.setInterval(()=>this.checkCursorStateChanged(),200)),this.registerInterval(window.setInterval(()=>this.writeDatabase(this.database),this.settings.saveTimoutMs))}async registerShortcutCommands(){this.addCommand({id:"previous-cursor-position",name:"Return to previous cursor position",editorCallback:async(t,e)=>{let i=this.app.workspace.getMostRecentLeaf();await this.historyService.returnToPreviousPosition(t,i)}}),this.addCommand({id:"cursor-position-forward",name:"Re-return to next cursor position",editorCallback:async(t,e)=>{let i=this.app.workspace.getMostRecentLeaf();await this.historyService.proceedToNextPosition(t,i)}})}renameFile(t,e){let i=t.path,r=e;this.database[i]=this.database[r],delete this.database[r]}deleteFile(t){let e=t.path;delete this.database[e]}checkCursorStateChanged(){let t=this.app.workspace.getActiveFile(),e=t==null?void 0:t.path;if(!e||!this.lastLoadedFileName||e!=this.lastLoadedFileName||this.loadingFile)return;let i=this.getCursorState();this.latestCursorState||(this.latestCursorState=i),this.shouldSaveState(i)&&(this.saveCursorState(i).then(),this.latestCursorState=i,t&&i.cursor&&this.historyService.updateCurrentPosition({file:t,line:i.cursor.to.line,positionInLine:i.cursor.to.ch,epochTimestampMs:Date.now()}))}shouldSaveState(t){return!!(t.scrollState&&!isNaN(t.scrollState.top)&&!isNaN(t.scrollState.left)&&!this.isCursorStatesEquals(t,this.latestCursorState))}isCursorStatesEquals(t,e){let i=t==null?void 0:t.cursor,r=e==null?void 0:e.cursor;if(!i)return!r;if(!r)return!i;if(i.from.ch!=r.from.ch||i.from.line!=r.from.line||i.to.ch!=r.to.ch||i.to.line!=r.to.line)return!1;let o=t==null?void 0:t.scrollState,n=e==null?void 0:e.scrollState;return!(o&&!n||!o&&n||o&&n&&(o.left!=n.left||o.top!=n.top))}async saveCursorState(t){var i;let e=(i=this.app.workspace.getActiveFile())==null?void 0:i.path;e&&e==this.lastLoadedFileName&&(this.database[e]=t)}async restoreCursorState(){var e;let t=(e=this.app.workspace.getActiveFile())==null?void 0:e.path;if(!(!t||this.loadingFile&&this.lastLoadedFileName==t)&&!this.isActiveFileAlreadyLoaded()){if(this.loadedLeafIdList=this.app.workspace.getLeavesOfType("markdown").map(i=>{var r;return(r=P(i))!=null?r:g}).filter(i=>i!==g),this.loadingFile=!0,this.lastLoadedFileName!=t){this.latestCursorState={},this.lastLoadedFileName=t;let i;t&&(i=this.database[t],i&&(await sleep(this.settings.delayAfterFileOpeningMs),this.app.workspace.containerEl.querySelector("span.is-flashing")||(await sleep(10),this.setCursorState(i)))),this.latestCursorState=i}this.loadingFile=!1}}isActiveFileAlreadyLoaded(){let t=this.app.workspace.getMostRecentLeaf(),e=P(t);return this.loadedLeafIdList.includes(e!=null?e:g)}async readDatabase(){let t={};if(await this.app.vault.adapter.exists(this.settings.databaseFilePath)){let e=await this.app.vault.adapter.read(this.settings.databaseFilePath);t=JSON.parse(e)}return t}async writeDatabase(t){let e=this.settings.databaseFilePath.substring(0,this.settings.databaseFilePath.lastIndexOf("/"));await this.app.vault.adapter.exists(e)||await this.app.vault.adapter.mkdir(e),JSON.stringify(this.database)!==JSON.stringify(this.lastSavedDatabase)&&(await this.app.vault.adapter.write(this.settings.databaseFilePath,JSON.stringify(t)),this.lastSavedDatabase=p(t))}getCursorState(){let t={},e=this.getEditor();if(e){t.scrollState=e.getScrollInfo();let i=e.getCursor("anchor"),r=e.getCursor("head");i&&r&&(t.cursor={from:{ch:i.ch,line:i.line},to:{ch:r.ch,line:r.line}})}return t}setCursorState(t){var i,r;let e=this.getEditor();e&&(t.cursor?(e.setSelection(t.cursor.from,t.cursor.to),e.scrollIntoView(t.cursor,!0)):e.scrollTo((i=t.scrollState)==null?void 0:i.left,(r=t.scrollState)==null?void 0:r.top))}getEditor(){var t;return(t=this.app.workspace.getActiveViewOfType(S.MarkdownView))==null?void 0:t.editor}async loadSettings(){let t=p(b);t.databaseFilePath=this.app.vault.configDir+"/"+t.databaseFilePath;let e={...t,...await this.loadData()};(e==null?void 0:e.saveTimoutMs)<5e3&&(e.saveTimoutMs=5e3),this.settings=e}async saveSettings(t){this.settings={...t},await this.saveData(t)}};var O=m;

/* nosourcemap */